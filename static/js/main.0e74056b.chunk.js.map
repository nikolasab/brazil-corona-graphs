{"version":3,"sources":["components/Header.js","lib/api.js","components/Graphs.js","pages/App.js","index.js"],"names":["Header","className","getData","fetch","then","response","json","data","Graphs","useState","mapData","setMapData","pieData","setPieData","tickCount","setTickCount","window","innerWidth","width","setWidth","updateWidth","ev","target","retrieveData","a","apiData","map","currentDate","x","date","y","confirmed","length","recovered","deaths","Math","round","useEffect","interval","setInterval","clearInterval","addEventListener","_throttle","removeEventListener","chartGraph","theme","VictoryTheme","material","height","domainPadding","animate","duration","onLoad","containerComponent","labels","datum","moment","format","labelComponent","cornerRadius","flyoutStyle","stroke","fill","tickLabelComponent","angle","dy","style","fontSize","tickLabels","dependentAxis","padding","pieGraph","strokeWidth","App","placeItems","href","document","title","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0e74056b.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header () {\n    return (\n        <div className='p-8 w-full text-center text-3xl text-blue-800 shadow-xs font-thin'>\n            Novo Coronavirus (Covid-19) - Brasil\n        </div>\n    )\n}\n\nexport default Header\n","export function getData () {\n    return fetch(\"https://pomber.github.io/covid19/timeseries.json\")\n    .then(response => response.json())\n    .then(data => {\n      return data['Brazil'];\n    })\n\n}","import React, { useState, useEffect } from 'react';\nimport {\n    VictoryChart,\n    VictoryTheme,\n    VictoryLine,\n    VictoryAxis,\n    VictoryLabel,\n    VictoryBar,\n    VictoryTooltip,\n    VictoryVoronoiContainer,\n} from 'victory';\nimport { throttle as _throttle } from 'lodash';\nimport moment from 'moment';\n\nimport { getData } from '../lib/api';\n\nfunction Graphs() {\n    const [mapData, setMapData] = useState();\n    const [pieData, setPieData] = useState();\n    const [tickCount, setTickCount] = useState()\n    const [width, setWidth] = useState(window.innerWidth);\n\n    const updateWidth = ev => {\n        setWidth(ev.target.innerWidth);\n    };\n\n    async function retrieveData () {\n        const apiData = await getData();\n\n        setMapData(apiData.map((currentDate) => ({\n            x: currentDate.date,\n            y: currentDate.confirmed,\n        })));\n\n        setPieData([\n            { x: 'Recuperados', y: apiData[apiData.length-1].recovered },\n            { x: 'Mortes', y: apiData[apiData.length-1].deaths },\n            { x: 'Confirmados', y: apiData[apiData.length-1].confirmed },\n        ]);\n\n        setTickCount(width < 500 ? Math.round((apiData.length / 10 + 1)) : Math.round((apiData.length / 5 + 1)))\n    }\n    /* eslint-disable */\n    useEffect(() => {\n        retrieveData()\n        const interval = setInterval(() => {\n            retrieveData()\n        }, 14400000)\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('resize', _throttle(updateWidth, 600));\n\n        return () => {\n            window.removeEventListener('resize', updateWidth);\n        };\n    }, []);\n    /* eslint-enable */\n    const chartGraph = mapData ?\n        <VictoryChart\n            theme={VictoryTheme.material}\n            width={width}\n            height={550}\n            domainPadding={50}\n            animate={{\n                duration: 2500,\n                onLoad: { duration: 200 }\n            }}\n            containerComponent={\n                <VictoryVoronoiContainer\n                    labels={({datum}) => `${moment(datum.x).format('DD/MMM/YYYY')}\\nConfirmados: ${datum.y}`}\n                    labelComponent={\n                        <VictoryTooltip\n                            cornerRadius={5}\n                            flyoutStyle={{\n                                stroke: '#d7d7d7',\n                                fill: \"white\"\n                            }}\n                        />\n                    }\n                />\n            }\n        >\n            <VictoryAxis\n                tickCount={tickCount}\n                tickLabelComponent={<VictoryLabel angle={-35} dy={10} style={{ data: { fontSize: 32}}} />}\n            />\n            <VictoryAxis\n                style={{\n                    tickLabels: {fontSize: 16},\n                }}\n                dependentAxis\n            />\n            <VictoryLine\n                data={mapData}\n                style={{\n                    data: { stroke: \"#c43a31\" },\n                    labels: {\n                        fill: \"#c43a31\",\n                        fontSize: 20,\n                        padding: 5\n                    }\n                }}\n            />\n        </VictoryChart>\n        : null\n\n    const pieGraph = mapData ?\n        <VictoryChart\n            theme={VictoryTheme.material}\n            height={550}\n            width={width}\n            domainPadding={100}\n            animate={{\n                duration: 1000,\n                onLoad: { duration: 500 }\n            }}\n        >\n            <VictoryAxis\n            style={{\n                tickLabels: {fontSize: 16},\n            }}\n            />\n            <VictoryAxis\n                dependentAxis\n                style={{\n                    tickLabels: {fontSize: 16},\n                }}\n            />\n            <VictoryBar\n                data={pieData}\n                style={{ data: { fill: \"#c43a31\", stroke: \"black\", strokeWidth: 1 }, labels: {fill: '#c43a31', fontSize: 16}}}\n                labels={({ datum }) => datum.y}\n                labelComponent={(\n                    <VictoryLabel dy={-10} />\n                )}\n            />\n        </VictoryChart>\n        : null\n\n    return (\n        <>\n            <div className='mt-12'>\n                <h1 className='text-xl text-gray-600 mx-auto text-center'>Número de casos / Tempo</h1>\n                {chartGraph}\n            </div>\n            <div className='mt-20'>\n                <h1 className='text-xl text-gray-600 mx-auto text-center'> Relação entre Confirmados, recuperados e mortes</h1>\n                {pieGraph}\n            </div>\n        </>\n    )\n}\n\nexport default Graphs\n","import React from 'react';\nimport 'moment/locale/pt-br';\n\nimport Header from '../components/Header'\nimport Graphs from '../components/Graphs'\n\nfunction App() {\n    return (\n        <div className=\"grid min-h-screen\" style={{placeItems: 'center'}}>\n            <Header />\n            <div className=\"w-full p-2 md:w-10/12 grid grid-cols-1\">\n                <Graphs />\n            </div>\n            <div className=\"my-16\">\n                <p className='text-xs text-gray-600 opacity-75'>\n                    Dados coletados de <a className='text-blue-700' href=\"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series\">https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series</a>\n                </p>\n                <p className='text-xs font-semibold text-gray-800 text-center my-8'>\n                    #FiqueEmCasa\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/tailwind.css'\nimport App from './pages/App';\n\ndocument.title='Covid-19 Brasil'\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}