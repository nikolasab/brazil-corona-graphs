{"version":3,"sources":["components/Header.js","lib/api.js","lib/translate.js","lib/utils.js","components/Graphs/Accumulative.js","components/Graphs/Increment.js","components/Graphs.js","pages/App.js","index.js"],"names":["Header","className","getData","fetch","then","response","json","data","translationObj","createPlotGraph","type","Object","keys","map","key","x","date","y","name","filter","value","Accumulative","width","mapData","confirmedGraphData","deathGraphData","theme","VictoryTheme","material","height","domainPadding","padding","animate","duration","onLoad","containerComponent","labels","originalName","datum","moment","format","labelComponent","cornerRadius","flyoutStyle","stroke","fill","tickCount","tickFormat","label","tickLabelComponent","style","fontSize","tickLabels","dependentAxis","Increment","graphColor","incrementData","filteredValue","index","incrementPlotGraph","averageData","avgIncrease","length","toFixed","incrementAverage","strokeWidth","dy","dx","angle","color","Graphs","useState","setMapData","window","innerWidth","setWidth","updateWidth","ev","target","retrieveData","a","apiData","useEffect","interval","setInterval","clearInterval","addEventListener","_throttle","removeEventListener","chartGraph","incrementConfirmedGraph","incrementDeathMap","App","placeItems","href","document","title","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c7564f80.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header () {\n    return (\n        <div className='p-8 w-full text-center text-3xl text-blue-800 shadow-xs font-thin'>\n            Novo Coronavirus (Covid-19) - Brasil\n        </div>\n    )\n}\n\nexport default Header\n","export function getData () {\n    return fetch('https://pomber.github.io/covid19/timeseries.json')\n        .then(response => response.json())\n        .then(data => {\n            return data['Brazil'];\n        })\n}\n","const translationObj = {\n    'confirmed': 'Confirmados',\n    'cases': 'Confirmados',\n    'deaths': 'Mortes',\n    'refuses': 'Descartados',\n    'recovered': 'Recuperados'\n}\n\nexport function translate (originalName) {\n    return translationObj[originalName];\n}\n","export function createPlotGraph(data, type) {\n    return Object.keys(data).map((key) => {\n        return {\n            x: data[key].date,\n            y: data[key][type],\n            name: type,\n        }\n    }).filter((value) => value.y > 0)\n}\n\nexport function incrementPlotGraph(data, type) {\n    return Object.keys(data).filter((value) => {\n        return data[value][type] > 0;\n    }).map((filteredValue, index) => {\n        return {\n            x: index + 1,\n            y: data[filteredValue][type] - data[filteredValue - 1][type]\n        }\n    })\n}\n\n\nexport function incrementAverage(data) {\n    let avgIncrease = 0;\n\n    for (let index = 1; index < data.length; index++) {\n        let valueToAdd = data[index - 1].y === 0 ? 0 : (data[index].y - data[index - 1].y) / data[index - 1].y;\n        avgIncrease = avgIncrease + valueToAdd;\n    }\n    return ((avgIncrease / (data.length)) * 100).toFixed(2);\n}","import React from 'react'\nimport moment from 'moment'\nimport {\n    VictoryChart,\n    VictoryVoronoiContainer,\n    VictoryTheme,\n    VictoryArea,\n    VictoryTooltip,\n    VictoryAxis,\n    VictoryLabel,\n} from 'victory'\n\nimport { translate } from '../../lib/translate'\nimport { createPlotGraph } from '../../lib/utils'\n\nexport default function Accumulative({ width, mapData }) {\n\n    const confirmedGraphData = createPlotGraph(mapData, 'confirmed');\n    const deathGraphData = createPlotGraph(mapData, 'deaths')\n\n    return (\n        <VictoryChart\n            theme={VictoryTheme.material}\n            width={width}\n            height={550}\n            domainPadding={width < 500 ? 10 : 50}\n            padding={60}\n            animate={{\n                duration: 2000,\n                onLoad: { duration: 1000 }\n            }}\n            containerComponent={\n                <VictoryVoronoiContainer\n                    labels={({ datum }) => `${moment(datum.x, 'YYYY/MM/DD').format('DD-MM-YYYY')}\\n${translate(datum.name)}: ${datum.y}`}\n                    labelComponent={\n                        <VictoryTooltip\n                            cornerRadius={5}\n                            flyoutStyle={{\n                                stroke: '#d7d7d7',\n                                fill: 'white',\n                            }}\n                        />\n                    }\n                />\n            }\n        >\n            <VictoryAxis\n                tickCount={5}\n                tickFormat={(label) => `${moment(label, 'YYYY/MM/DD').format('DD-MM')}\\n${moment(label, 'YYYY/MM/DD').format('YYYY')}`}\n                tickLabelComponent={\n                    <VictoryLabel\n                        style={{ data: { fontSize: 32 } }}\n                    />\n                }\n            />\n            <VictoryAxis\n                style={{\n                    tickLabels: { fontSize: 16 },\n                }}\n                dependentAxis\n            />\n            <VictoryArea\n                data={confirmedGraphData}\n                style={{\n                    data: { stroke: \"rgba(52, 158, 235, 1)\", fill: \"rgba(52, 158, 235, 0.2)\" },\n                    labels: {\n                        fill: \"rgba(52, 158, 235, 1)\",\n                        fontSize: 20,\n                        padding: 5\n                    }\n                }}\n            />\n            <VictoryArea\n                data={deathGraphData}\n                style={{\n                    data: { stroke: \"rgba(230, 48, 78, 1)\", fill: \"rgba(230, 48, 78, 0.4)\" },\n                    labels: {\n                        fill: \"rgba(230, 48, 78, 1)\",\n                        fontSize: 20,\n                        padding: 5\n                    }\n                }}\n            />\n\n        </VictoryChart>\n    )\n}\n","import React from 'react';\nimport {\n    VictoryChart,\n    VictoryAxis,\n    VictoryBar,\n    VictoryTheme,\n    VictoryLabel,\n} from 'victory';\n\nimport { incrementPlotGraph, incrementAverage } from '../../lib/utils';\n\nexport default function Increment({ width, mapData, type, graphColor }) {\n    const incrementData = incrementPlotGraph(mapData, type);\n    const averageData = incrementAverage(incrementData);\n\n\n\n    return (\n        <>\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={width}\n                height={550}\n                domainPadding={width < 500 ? 10 : 50}\n                animate={{\n                    duration: 2000,\n                    onLoad: { duration: 1000 }\n                }}\n            >\n                <VictoryAxis\n                    tickCount={5}\n                    tickLabelComponent={<VictoryLabel style={{ data: { fontSize: 32 } }} />}\n                />\n                <VictoryAxis\n                    style={{\n                        tickLabels: { fontSize: 16 },\n                    }}\n                    dependentAxis\n                />\n                <VictoryBar\n                    data={incrementData}\n                    labels={({ datum }) => datum.y}\n                    style={{\n                        labels: { fill: `rgba(${graphColor}, 1)`, fontSize: () => width < 500 ? 10 : 16 },\n                        data: {\n                            fill: `rgba(${graphColor}, 0.5)`,\n                            stroke: `rgba(${graphColor}, 1)`,\n                            strokeWidth: 1,\n                        }\n                    }}\n                    labelComponent={<VictoryLabel dy={width < 500 ? 5 : -15} dx={width < 500 ? 20 : 0} angle={width < 500 ? -90 : 0}/>}\n                />\n            </VictoryChart>\n            <div className='text-center italic'>\n                <p className='text-xs text-gray-700 font-thin'>Aumento Percentual médio: <span className='text-xs font-bold ml-1' style={{ color: `rgba(${graphColor}, 1)` }}>{averageData}%</span></p>\n            </div>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { throttle as _throttle } from 'lodash';\n\nimport { getData } from '../lib/api';\nimport Accumulative from './Graphs/Accumulative';\nimport Increment from './Graphs/Increment';\n\nfunction Graphs () {\n    const [mapData, setMapData] = useState();\n    const [width, setWidth] = useState(window.innerWidth);\n\n    const updateWidth = ev => {\n        setWidth(ev.target.innerWidth);\n    };\n\n    async function retrieveData () {\n        const apiData = await getData();\n        setMapData(apiData);\n    }\n    /* eslint-disable */\n    useEffect(() => {\n        retrieveData()\n        const interval = setInterval(() => {\n            retrieveData()\n        }, 14400000)\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('resize', _throttle(updateWidth, 600));\n\n        return () => {\n            window.removeEventListener('resize', updateWidth);\n        };\n    }, []);\n    /* eslint-enable */\n    const chartGraph = mapData ?\n        <Accumulative\n            width={width}\n            mapData={mapData}\n        />\n        : null\n\n    const incrementConfirmedGraph = mapData ?\n        <Increment\n            width={width}\n            mapData={mapData}\n            type='confirmed'\n            graphColor='52, 158, 235'\n        />\n        : null\n\n    const incrementDeathMap = mapData ?\n        <Increment\n            width={width}\n            mapData={mapData}\n            type='deaths'\n            graphColor='230, 48, 78'\n        />\n        : null\n\n    return (\n        <>\n            <div className='mt-12'>\n                <h1 className='text-xl text-gray-600 mx-auto text-center'>Evolução Covid-19 / Dia</h1>\n                {chartGraph}\n            </div>\n            <div className='mt-20'>\n                <h1 className='text-xl text-blue-600 mx-auto text-center'>Incremento no número de casos confirmados / Dia</h1>\n                <h3 className='text-xs text-blue-400 mx-auto text-center'>Desde o primeiro caso</h3>\n                {incrementConfirmedGraph}\n            </div>\n            <div className='mt-20'>\n                <h1 className='text-xl text-red-600 mx-auto text-center'>Incremento no número de mortes / Dia</h1>\n                <h3 className='text-xs text-red-400 mx-auto text-center'>Desde a primeira morte</h3>\n                {incrementDeathMap}\n            </div>\n        </>\n    )\n}\n\nexport default Graphs\n","import React from 'react';\nimport 'moment/locale/pt-br';\n\nimport Header from '../components/Header'\nimport Graphs from '../components/Graphs'\n\nfunction App() {\n    return (\n        <div className=\"grid min-h-screen\" style={{placeItems: 'center'}}>\n            <Header />\n            <div className=\"w-full p-2 md:w-10/12 grid grid-cols-1\">\n                <Graphs />\n            </div>\n            <div className=\"my-16\">\n                <p className='text-xs text-gray-600 text-center opacity-75'>\n                    Dados coletados de <a className='text-blue-700' href=\"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series\">https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series</a>\n                </p>\n                <p className='text-xs font-semibold text-gray-800 text-center my-8'>\n                    #FiqueEmCasa\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/tailwind.css'\nimport App from './pages/App';\n\ndocument.title='Covid-19 Brasil'\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}